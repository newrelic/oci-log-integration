name: 'Combined Trivy Scan'

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image for scanning
        run: |
          # Build the Docker image and tag it locally for scanning
          docker build -t oci-log-integration-scan:latest ./logs-function

      - name: Install Trivy CLI
        run: |
          # Download and install the Trivy CLI tool for the image scan
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy image scan (CLI)
        continue-on-error: true
        run: |
          trivy image \
            --format template --template '@/contrib/sarif.tpl' \
            --output trivy-image-results.sarif \
            --severity HIGH,CRITICAL \
            oci-log-integration-scan:latest

      - name: Run Trivy filesystem scan (Action)
        continue-on-error: true
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-fs-results.sarif'
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db
          TRIVY_GO_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-go-db

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-image-results.sarif'