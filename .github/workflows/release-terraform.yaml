name: Terraform Release 1.0.0

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      # Required to create/delete releases and tags
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Zip terraform folder
        run: |
          zip -r oci-log-integration.zip terraform

      # This step makes the workflow idempotent. It will delete the old release/tag before creating a new one.
      - name: Delete existing 1.0.0 tag and release
        run: |
          gh release delete 1.0.0 --yes || echo "Release 1.0.0 not found, proceeding."
          git push origin --delete 1.0.0 || echo "Tag 1.0.0 not found, proceeding."
        env:
          # The GITHUB_TOKEN has permissions to do this because of the `contents: write` permission on the job
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push new 1.0.0 tag
        run: |
          git tag 1.0.0
          git push origin 1.0.0

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "1.0.0"
          name: "oci-log-integration 1.0.0"
          body: "Static release of the OCI Log Integration Terraform module."
          files: oci-log-integration.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}